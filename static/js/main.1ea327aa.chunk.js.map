{"version":3,"sources":["components/navbar/Navbar.module.css","common/input/MyInput.module.css","components/display-telega/DisplayTelegtam.module.css","common/checkbox/MyCheckBox.module.css","App.module.css","common/button/Button.module.css","common/select/Select.module.css","common/radio/Radio.module.css","components/display-telega/DisplayTelegtam.tsx","common/button/MyButton.tsx","components/priority-list/PriorityList.tsx","common/input/MyInput.tsx","components/lesson-3/Lesson3.tsx","common/checkbox/MyCheckBox.tsx","components/lesson4/AllCustomComponent.tsx","components/preJunior/PreJunior.tsx","common/editableSpan/EditableSpan.tsx","common/select/Select.tsx","common/radio/Radio.tsx","components/Junior/Junior.tsx","settings/localStorage/localStorage.ts","components/Junior+/Junior+.tsx","components/navbar/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DisplayTelegram","props","fullName","text","addedTime","className","style","telegramChatMessage","telegramChatAuthor","telegramChatText","telegramChatTime","MyButton","title","onClickHandler","type","PriorityList","state","deleteItem","changeFilter","map","list","key","id","MyInput","value","onChange","onKeyPress","error","styles","group","e","currentTarget","charCode","highlight","bar","label","Lesson3","arr","useState","count","setCount","setValue","sayName","trim","length","addToArray","alert","newItem","v1","name","push","keyNumber","MyCheckBox","check","customLabel","cntr","labelCbx","checked","invisible","checkbox","width","height","viewBox","d","points","AllCustomComponent","setCheck","console","log","PreJunior","priority","setState","filter","setFilter","filteredState","preJuniorBlock","preJunior","less1","less2","less3","less4","EditableSpan","editMode","setEditMode","charcode","onClick","Select","items","select","onInput","item","i","selected","Radio","form_radio","htmlFor","Junior","valueES","setValueES","valueLS","setValueLS","selectValue","setSelectValue","CheckedValue","setCheckedValue","JuniorBlock","less6","less6_1","newValue","less6_2","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","less7","JuniorHard","Navbar","hidden","nav","navToggle","logo","to","activeClassName","active","App","role","app","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,UAAY,0BAA0B,KAAO,uB,qDCAzFD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,MAAQ,uBAAuB,MAAQ,uBAAuB,IAAM,qBAAqB,UAAY,2BAA2B,iBAAmB,oC,iBCApMD,EAAOC,QAAU,CAAC,oBAAsB,6CAA6C,mBAAqB,4CAA4C,iBAAmB,0CAA0C,iBAAmB,4C,gBCAtOD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,SAAW,6BAA6B,UAAY,gC,uBCA9GD,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,sB,gBCA1DD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,WAAa,4B,sNC4BhBC,EApBS,SAACC,GAAqC,IACrDC,EAA6BD,EAA7BC,SAAUC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,UACrB,OACI,6BACI,uCACA,yBAAKC,UAAWC,IAAMC,qBAClB,yBAAKF,UAAWC,IAAME,oBACjBN,GAEL,yBAAKG,UAAWC,IAAMG,kBACjBN,GAEL,yBAAKE,UAAWC,IAAMI,kBACjBN,MCdRO,G,MAAW,SAACV,GACiBA,EAA/BW,MAA+BX,EAAxBY,eAAwBZ,EAARa,OCwCnBC,EAvCM,SAACd,GAAkC,IAC/Ce,EAAmCf,EAAnCe,MAAOC,EAA4BhB,EAA5BgB,WAAYC,EAAgBjB,EAAhBiB,aAaxB,OACI,6BACI,uCACA,4BAEQF,EAAMG,KAAI,SAAAC,GACN,OAAO,wBAAIC,IAAKD,EAAKE,IAChBF,EAAKR,MACN,kBAAC,EAAD,CAAUA,MAAO,IAAKE,KAAM,MACpBD,eAAgB,WACpBI,EAAWG,EAAKE,YAMpC,6BACI,kBAAC,EAAD,CAAUR,KAAM,UAAWF,MAAO,MAAOC,eA7B3B,WACtBK,EAAa,UA6BL,kBAAC,EAAD,CAAUJ,KAAM,UAAWF,MAAO,QAASC,eA3B3B,WACxBK,EAAa,YA2BL,kBAAC,EAAD,CAAUJ,KAAM,UAAWF,MAAO,SAAUC,eAzB3B,WACzBK,EAAa,aAyBL,kBAAC,EAAD,CAAUJ,KAAM,UAAWF,MAAO,MAAOC,eAvB3B,WACtBK,EAAa,a,wBCbRK,EAAU,SAACtB,GAA6B,IAC1CuB,EAAsCvB,EAAtCuB,MAAOC,EAA+BxB,EAA/BwB,SAAUC,EAAqBzB,EAArByB,WAAYC,EAAS1B,EAAT0B,MACpC,OACI,yBAAKtB,UAAWuB,IAAOC,OACnB,2BACIf,KAAK,OACLU,MAAOA,EACPnB,UAAWsB,EAAQC,IAAOD,MAAQ,GAClCF,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEC,cAAcP,QACxCE,WAAY,SAAAI,GAAC,OAAIJ,EAAWI,EAAEE,aAElC,0BAAM3B,UAAWuB,IAAOK,YACxB,0BAAM5B,UAAWuB,IAAOM,MACxB,2BAAO7B,UAAWuB,IAAOO,OAAzB,UC8BGC,EA/CC,WACZ,IAAIC,EAAM,GADQ,EAEMC,mBAAiB,GAFvB,mBAEbC,EAFa,KAENC,EAFM,OAGMF,mBAAiB,IAHvB,mBAGbd,EAHa,KAGNiB,EAHM,KAcZC,EAAU,WACgB,IAAxBlB,EAAMmB,OAAOC,SACbC,IACAC,MAAMtB,GACNiB,EAAS,MAGXI,EAAa,WACf,IAAIE,EAAU,CAACzB,GAAI0B,cAAMC,KAAMzB,GAC/Ba,EAAIa,KAAKH,GACTP,GAAS,SAAAD,GAAK,OAAIA,EAAQ,MAO9B,OACI,6BACI,uCACA,6BACQ,kBAAC,EAAD,CAASf,MAAOA,EAAOC,SAxBjB,SAACD,GACnBiB,EAASjB,IAuBmDE,WATtC,SAACyB,GACL,KAAdA,GACAT,QASA,6BACI,kBAAC,EAAD,CAAU5B,KAAM,UAAWF,MAAO,WAAYC,eAAgB6B,KAGlE,6BACI,8CAAoBH,M,iBCvCvBa,EAAa,SAACnD,GAAgC,IAChDoD,EAA+BpD,EAA/BoD,MAAO5B,EAAwBxB,EAAxBwB,SAAS6B,EAAerD,EAAfqD,YACvB,OACI,yBAAKjD,UAAWuB,IAAO2B,MACnB,2BAAQlD,UAAWuB,IAAO4B,UAAWF,EACjC,2BAAOxC,KAAK,WAAW2C,QAASJ,EAAOhD,UAAWuB,IAAO8B,UAClDjC,SAAU,SAAAK,GAAC,OAAIL,EAASK,EAAEC,cAAc0B,YAC3C,yBAAKpD,UAAWuB,IAAO+B,UACnB,yBAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,aACpC,0BAAMC,EAAE,2LACR,8BAAUC,OAAO,wBCbhCC,EAAqB,WAAM,MAEV3B,oBAAkB,GAFR,mBAE7Be,EAF6B,KAEtBa,EAFsB,OAQZ5B,mBAAiB,IARL,mBAQ/Bd,EAR+B,KAQxBiB,EARwB,KAyBpC,OACI,6BACI,uCACA,6BACI,wCACI,kBAAC,EAAD,CAASjB,MAAOA,EAAOC,SApBjB,SAACD,GACnBiB,EAASjB,IAmBmDE,WAjBtC,SAACyB,GACL,KAAdA,GACAgB,QAAQC,IAAI,aAiBZ,6BACI,yCACA,kBAAC,EAAD,CAAUtD,KAAM,UAAWF,MAAO,MAAOC,eAf/B,WAClBiC,MAAM,mBAeE,kBAAC,EAAD,CAAUlC,MAAO,SAAUE,KAAM,MACvBD,eAdC,WACnBiC,MAAM,qBAeF,6BACI,2CACI,kBAAC,EAAD,CAAYO,MAAOA,EAAO5B,SArCpB,SAACD,GACnB0C,EAAS1C,IAoCsD8B,YAAa,cCpCvEe,EAAY,WAAO,IAAD,EACH/B,mBAAkC,CACtD,CAAChB,GAAI0B,cAAMpC,MAAO,QAAS0D,SAAU,SACrC,CAAChD,GAAI0B,cAAMpC,MAAO,OAAQ0D,SAAU,SACpC,CAAChD,GAAI0B,cAAMpC,MAAO,QAAS0D,SAAU,OACrC,CAAChD,GAAI0B,cAAMpC,MAAO,QAAS0D,SAAU,UACrC,CAAChD,GAAI0B,cAAMpC,MAAO,KAAM0D,SAAU,WANX,mBACtBtD,EADsB,KACfuD,EADe,OAQDjC,mBAAqB,OARpB,mBAQtBkC,EARsB,KAQdC,EARc,KAWvBC,EAAgB1D,EAEL,UAAXwD,IACAE,EAAgBA,EAAcF,QAAO,SAAApD,GAAI,MAAsB,UAAlBA,EAAKkD,aAEvC,WAAXE,IACAE,EAAgBA,EAAcF,QAAO,SAAApD,GAAI,MAAsB,WAAlBA,EAAKkD,aAEvC,QAAXE,IACAE,EAAgBA,EAAcF,QAAO,SAAApD,GAAI,MAAsB,QAAlBA,EAAKkD,aAYtD,OACI,yBAAKjE,UAAWuB,IAAO+C,gBACnB,yCACA,yBAAKtE,UAAWuB,IAAOgD,WACnB,yBAAKvE,UAAWuB,IAAOiD,OACnB,kBAAC,EAAD,CAAiB3E,SAAU,oGACVC,KAAM,iHACNC,UAAW,WAEhC,yBAAKC,UAAWuB,IAAOkD,OACnB,kBAAC,EAAD,CAAc9D,MAAO0D,EAAezD,WAdjC,SAACK,GAChBiD,EAASvD,EAAMwD,QAAO,SAAApD,GAAI,OAAIA,EAAKE,KAAOA,OAa8BJ,aAnBvD,SAACM,GAClBiD,EAAUjD,OAoBF,yBAAKnB,UAAWuB,IAAOmD,OACnB,kBAAC,EAAD,OAEJ,yBAAK1E,UAAWuB,IAAOoD,OACnB,kBAAC,EAAD,U,gBChDPC,EAAe,SAAChF,GAAkC,IAAD,EAE1BqC,oBAAkB,GAFQ,mBAEnD4C,EAFmD,KAEzCC,EAFyC,KAGnD3D,EAAmBvB,EAAnBuB,MAAOC,EAAYxB,EAAZwB,SAgBd,OACIyD,EACM,kBAAC,EAAD,CAAS1D,MAAOA,EAAOC,SAAUA,EAAUC,WAb3B,SAAC0D,GACvBjB,QAAQC,IAAIgB,GACK,KAAbA,IACI5D,EACA2D,GAAY,GAEZrC,MAAM,oBAQR,0BAAMuC,QAjBS,WACrBF,GAAY,KAgB4B3D,I,qBCtBnC8D,EAAS,SAACrF,GAA4B,IACxCsF,EAA0BtF,EAA1BsF,MAAO9D,EAAmBxB,EAAnBwB,SAAUD,EAASvB,EAATuB,MACxB,OACI,yBAAKnB,UAAWuB,IAAO4D,QACnB,4BAAQC,QAAS,SAAC3D,GAAD,OAAOL,EAASK,EAAEC,cAAcP,SAC5C+D,EAAMpE,KAAI,SAACuE,EAAMC,GAAP,OAAa,4BAAQtE,IAAKsE,EAAGnE,MAAOkE,EACfE,SAAUpE,IAAUkE,GAAsBA,S,iBCA7EG,EAAQ,SAAC5F,GAA2B,IACtCsF,EAA+BtF,EAA/BsF,MAAOtC,EAAwBhD,EAAxBgD,KAAMzB,EAAkBvB,EAAlBuB,MAAMC,EAAYxB,EAAZwB,SAC1B,OACI,6BAEQ8D,EAAMpE,KAAI,SAAAuE,GAAI,OAAI,yBAAKrE,IAAKqE,EAAKpE,GAAIjB,UAAWuB,IAAOkE,YACnD,2BAAOxE,GAAIoE,EAAKpE,GACTmC,QAASjC,IAAUkE,EAAKlE,MACxBV,KAAK,QACLmC,KAAMA,EACNzB,MAAOkE,EAAKlE,MACZC,SAAU,SAACK,GAAD,OAAOL,EAASK,EAAEC,cAAcP,UACjD,2BAAOuE,QAASL,EAAKpE,IAAKoE,EAAKvD,aCnBtC6D,EAAS,WAAM,MAGM1D,mBAAiB,yBAHvB,mBAGjB2D,EAHiB,KAGRC,EAHQ,OASM5D,mBAAiB,yBATvB,mBASjB6D,EATiB,KASRC,EATQ,OAuBc9D,mBAAiB,QAvB/B,mBAuBjB+D,EAvBiB,KAuBJC,EAvBI,OAkCgBhE,mBAAiB,KAlCjC,mBAkCjBiE,EAlCiB,KAkCHC,EAlCG,KAuDxB,OACI,yBAAKnG,UAAWuB,IAAO6E,aACnB,sCACA,yBAAKpG,UAAWuB,IAAOoE,QACnB,yBAAK3F,UAAWuB,IAAO8E,OACnB,wCACA,yBAAKrG,UAAWuB,IAAO+E,SACnB,wDACA,kBAAC,EAAD,CAAcnF,MAAOyE,EAASxE,SA1D1B,SAACmF,GACrBV,EAAWU,OA2DC,yBAAKvG,UAAWuB,IAAOiF,SACnB,wDACA,kBAAC,EAAD,CAAcrF,MAAO2E,EAAS1E,SAAU2E,IACxC,kBAAC,EAAD,CAAUxF,MAAO,OAAQE,KAAM,UAAWD,eAxDpC,YCnBvB,SAAuBQ,EAAaL,GACvC,IAAM8F,EAAgBC,KAAKC,UAAUhG,GACrCiG,aAAaC,QAAQ7F,EAAKyF,GDkBtBK,CAAqB,OAAQ,CAAChB,eAwDd,kBAAC,EAAD,CAAUvF,MAAO,UAAWE,KAAM,UAAWD,eAtDjC,WAC5B,IAAMG,EClBP,SAAyBK,EAAa+F,GACzC,IAAMN,EAAgBG,aAAaI,QAAQhG,GAE3C,OADsB,OAAlByF,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EDesBG,CAAwB,OAAQ,CAACpB,QAAS,qBACnEC,EAAWpF,EAAMmF,cAuDT,yBAAK9F,UAAWuB,IAAO4F,OACnB,iDACA,kBAAC,EAAD,CAAQ/F,SA5CD,SAACD,GACpB8E,EAAe9E,IA2C+B+D,MAlDpC,CACV,OACA,MACA,OACA,WA8C4D/D,MAAO6E,IACvD,gDACA,kBAAC,EAAD,CAAOpD,KAAM,MAAOsC,MAzCA,CAChC,CACI/D,MAAO,IACPW,MAAO,iBACPb,GAAI,WAER,CACIE,MAAO,IACPW,MAAO,iBACPb,GAAI,WAER,CACIE,MAAO,IACPW,MAAO,iBACPb,GAAI,YA2B2CE,MAAO+E,EAAc9E,SAxBpD,SAACD,GACrBgF,EAAgBhF,UE3DXiG,EAAa,WACtB,OACI,yC,gBCAKC,EAAS,WAClB,OACI,oCACI,2BAAO5G,KAAK,WAAWQ,GAAG,YAAYqG,QAAM,IACxC,yBAAKtH,UAAWuB,IAAOgG,KACnB,2BAAO7B,QAAQ,YAAY1F,UAAWuB,IAAOiG,YAC7C,wBAAIxH,UAAWuB,IAAOkG,MAElB,kBAAC,IAAD,CAASC,GAAG,IAAIC,gBAAiBpG,IAAOqG,QAAxC,aAEJ,4BACI,4BAAI,kBAAC,IAAD,CAASF,GAAG,aAAaC,gBAAiBpG,IAAOqG,QAAjD,cACJ,4BAAI,kBAAC,IAAD,CAASF,GAAG,UAAUC,gBAAiBpG,IAAOqG,QAA9C,WACJ,4BAAI,kBAAC,IAAD,CAASF,GAAG,WAAWC,gBAAiBpG,IAAOqG,QAA/C,gBCgBbC,MAhBf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,0BAAMC,KAAK,QACP,yBAAK9H,UAAWuB,IAAOwG,KAEnB,kBAAC,IAAD,CAAOC,KAAM,aAAcC,OAAQ,kBAAM,kBAAC,EAAD,SACzC,kBAAC,IAAD,CAAOD,KAAM,UAAWC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAM,WAAYC,OAAQ,kBAAM,kBAAC,EAAD,aCdvCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3H,GACLwC,QAAQxC,MAAMA,EAAM4H,c","file":"static/js/main.1ea327aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ARgur\",\"navToggle\":\"Navbar_navToggle__RVhsc\",\"logo\":\"Navbar_logo__3zskX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"MyInput_group__3QQYB\",\"label\":\"MyInput_label__1cJZu\",\"error\":\"MyInput_error__142j9\",\"bar\":\"MyInput_bar__398tS\",\"highlight\":\"MyInput_highlight__2oy_d\",\"inputHighlighter\":\"MyInput_inputHighlighter__3Kx-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telegramChatMessage\":\"DisplayTelegtam_telegramChatMessage__2qrwY\",\"telegramChatAuthor\":\"DisplayTelegtam_telegramChatAuthor__1wFQ8\",\"telegramChatText\":\"DisplayTelegtam_telegramChatText__v3_1c\",\"telegramChatTime\":\"DisplayTelegtam_telegramChatTime__2_L5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelCbx\":\"MyCheckBox_labelCbx__1rVz9\",\"checkbox\":\"MyCheckBox_checkbox__2jewE\",\"invisible\":\"MyCheckBox_invisible__1TJji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__v_weI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__94s3U\",\"red\":\"Button_red__3Leok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__2K77n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_radio\":\"Radio_form_radio__147Mh\"};","import React from \"react\";\r\nimport style from './DisplayTelegtam.module.css';\r\n\r\nexport type DisplayTelegramPropsType = {\r\n    fullName: string,\r\n    text: string,\r\n    addedTime: string\r\n}\r\n\r\nconst DisplayTelegram = (props: DisplayTelegramPropsType) => {\r\n    let {fullName, text, addedTime} = props;\r\n    return (\r\n        <div>\r\n            <h2>Lesson1</h2>\r\n            <div className={style.telegramChatMessage}>\r\n                <div className={style.telegramChatAuthor}>\r\n                    {fullName}\r\n                </div>\r\n                <div className={style.telegramChatText}>\r\n                    {text}\r\n                </div>\r\n                <div className={style.telegramChatTime}>\r\n                    {addedTime}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default DisplayTelegram;","import React from 'react'\r\nimport styles from './Button.module.css'\r\n\r\ntype ButtonPropsType = {\r\n    title: string;\r\n    onClickHandler: () => void;\r\n    type:'default' | 'red';\r\n}\r\nexport const MyButton = (props: ButtonPropsType) => {\r\n    const {title, onClickHandler, type} = props;\r\n    \r\n    return (\r\n            // <button className={type === 'default' ? styles.default :  styles.red} onClick={onClickHandler}>{title}</button>\r\n            <button className={styles[type]} onClick={onClickHandler}>{title}</button>\r\n    );\r\n}","import React from 'react';\r\nimport {priorityListType, filterType} from '../../App';\r\nimport { MyButton } from '../../common/button/MyButton';\r\n\r\ntype PriorityListPropsType = {\r\n    state: Array<priorityListType>,\r\n    deleteItem: (id: string) => void,\r\n    changeFilter: (value: filterType) => void\r\n}\r\n\r\nconst PriorityList = (props: PriorityListPropsType) => {\r\n    let {state, deleteItem, changeFilter} = props;\r\n    const onChangeAllFilter = () => {\r\n        changeFilter('all');\r\n    }\r\n    const onChangeHightFilter = () => {\r\n        changeFilter('hight');\r\n    }\r\n    const onChangeMiddleFilter = () => {\r\n        changeFilter('middle');\r\n    }\r\n    const onChangeLowFilter = () => {\r\n        changeFilter('low');\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Lesson2</h2>\r\n            <ul>\r\n                {\r\n                    state.map(list => {\r\n                        return <li key={list.id}>\r\n                            {list.title}\r\n                            <MyButton title={'x'} type={'red'}\r\n                                    onClickHandler={() => {\r\n                                deleteItem(list.id)\r\n                            }}/>\r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n            <div>\r\n                <MyButton type={'default'} title={'All'} onClickHandler={onChangeAllFilter}/>\r\n                <MyButton type={'default'} title={'Hight'} onClickHandler={onChangeHightFilter}/>\r\n                <MyButton type={'default'} title={'Middle'} onClickHandler={onChangeMiddleFilter}/>\r\n                <MyButton type={'default'} title={'Low'} onClickHandler={onChangeLowFilter}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default PriorityList;","import React from 'react'\r\nimport styles from './MyInput.module.css'\r\n\r\ntype MyInputPropsType = {\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n    onKeyPress: (value: number) => void;\r\n    error?: boolean;\r\n}\r\nexport const MyInput = (props: MyInputPropsType) => {\r\n    const {value, onChange, onKeyPress, error} = props;\r\n    return (\r\n        <div className={styles.group}>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className={error ? styles.error : ''}\r\n                onChange={e => onChange(e.currentTarget.value)}\r\n                onKeyPress={e => onKeyPress(e.charCode)}\r\n            />\r\n            <span className={styles.highlight}></span>\r\n            <span className={styles.bar}></span>\r\n            <label className={styles.label}>Name</label>\r\n        </div>\r\n    );\r\n}","import React, {useState, ChangeEvent, KeyboardEvent} from 'react';\r\nimport {v1} from 'uuid';\r\nimport {MyButton} from '../../common/button/MyButton';\r\nimport { MyInput } from '../../common/input/MyInput';\r\n\r\nconst Lesson3 = () => {\r\n    let arr = [];\r\n    let [count, setCount] = useState<number>(0);\r\n    let [value, setValue] = useState<string>('');\r\n\r\n\r\n    // const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     const value = e.currentTarget.value;\r\n    //     setValue(value);\r\n    // }\r\n\r\n    const onChangeValue = (value: string) => {\r\n        setValue(value);\r\n    }\r\n    const sayName = () => {\r\n        if (value.trim().length !== 0) {\r\n            addToArray();\r\n            alert(value);\r\n            setValue('');\r\n        }\r\n    }\r\n    const addToArray = () => {\r\n        let newItem = {id: v1(), name: value}\r\n        arr.push(newItem);\r\n        setCount(count => count + 1);\r\n    }\r\n    const onKeyPressHandler = (keyNumber: number) => {\r\n        if (keyNumber === 13) {\r\n            sayName();\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Lesson3</h2>\r\n            <div>\r\n                    <MyInput value={value} onChange={onChangeValue} onKeyPress={onKeyPressHandler} />\r\n            </div>\r\n            <div>\r\n                <MyButton type={'default'} title={'Click me'} onClickHandler={sayName}/>\r\n                {/*<button onClick={sayName}>Button</button>*/}\r\n            </div>\r\n            <div>\r\n                <span>count name - {count}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Lesson3;","import React from 'react'\r\nimport styles from './MyCheckBox.module.css'\r\n\r\ntype MyCheckBoxPropsType = {\r\n    check: boolean;\r\n    onChange: (isCheck: boolean) => void;\r\n    customLabel:string;\r\n}\r\nexport const MyCheckBox = (props: MyCheckBoxPropsType) => {\r\n    const {check, onChange,customLabel} = props;\r\n    return (\r\n        <div className={styles.cntr}>\r\n            <label  className={styles.labelCbx}>{customLabel}\r\n                <input type=\"checkbox\" checked={check} className={styles.invisible}\r\n                       onChange={e => onChange(e.currentTarget.checked)} />\r\n                    <div className={styles.checkbox}>\r\n                        <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\">\r\n                            <path d=\"M3,1 L17,1 L17,1 C18.1045695,1 19,1.8954305 19,3 L19,17 L19,17 C19,18.1045695 18.1045695,19 17,19 L3,19 L3,19 C1.8954305,19 1,18.1045695 1,17 L1,3 L1,3 C1,1.8954305 1.8954305,1 3,1 Z\"></path>\r\n                            <polyline points=\"4 11 8 15 16 6\"></polyline>\r\n                        </svg>\r\n                    </div>\r\n\r\n            </label>\r\n         </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {MyCheckBox} from '../../common/checkbox/MyCheckBox';\r\nimport {MyInput} from '../../common/input/MyInput';\r\nimport {MyButton} from '../../common/button/MyButton';\r\n\r\nexport const AllCustomComponent = () => {\r\n    //checkbox\r\n    const [check, setCheck] = useState<boolean>(false);\r\n    const setCheckValue = (value: boolean) => {\r\n        setCheck(value);\r\n    }\r\n\r\n    //input\r\n    let [value, setValue] = useState<string>('');\r\n\r\n    const onChangeValue = (value: string) => {\r\n        setValue(value);\r\n    }\r\n    const onKeyPressHandler = (keyNumber: number) => {\r\n        if (keyNumber === 13) {\r\n            console.log('press')\r\n        }\r\n    }\r\n    //button\r\n    const onClickButton = () => {\r\n        alert('Button click');\r\n    }\r\n    const onDeleteButton = () => {\r\n        alert('Button delete');\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Lesson4</h2>\r\n            <div>\r\n                <h3>My input</h3>\r\n                    <MyInput value={value} onChange={onChangeValue} onKeyPress={onKeyPressHandler}/>\r\n            </div>\r\n            <div>\r\n                <h3>My button</h3>\r\n                <MyButton type={'default'} title={'All'} onClickHandler={onClickButton}/>\r\n                <MyButton title={'delete'} type={'red'}\r\n                          onClickHandler={onDeleteButton}/>\r\n            </div>\r\n            <div>\r\n                <h3>My checkbox</h3>\r\n                    <MyCheckBox check={check} onChange={setCheckValue} customLabel={'check1'}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport styles from './PreJunior.module.css'\r\nimport DisplayTelegram from '../display-telega/DisplayTelegtam';\r\nimport PriorityList from '../priority-list/PriorityList';\r\nimport {filterType, priorityListType} from '../../App';\r\nimport {v1} from 'uuid';\r\nimport Lesson3 from '../lesson-3/Lesson3';\r\nimport {AllCustomComponent} from '../lesson4/AllCustomComponent';\r\n\r\nexport const PreJunior = () => {\r\n    let [state, setState] = useState<Array<priorityListType>>([\r\n        {id: v1(), title: 'react', priority: 'hight'},\r\n        {id: v1(), title: 'work', priority: 'hight'},\r\n        {id: v1(), title: 'anime', priority: 'low'},\r\n        {id: v1(), title: 'games', priority: 'middle'},\r\n        {id: v1(), title: 'js', priority: 'hight'},\r\n    ]);\r\n    let [filter, setFilter] = useState<filterType>('all');\r\n\r\n    //filtered\r\n    let filteredState = state;\r\n\r\n    if (filter === 'hight') {\r\n        filteredState = filteredState.filter(list => list.priority === 'hight');\r\n    }\r\n    if (filter === 'middle') {\r\n        filteredState = filteredState.filter(list => list.priority === 'middle');\r\n    }\r\n    if (filter === 'low') {\r\n        filteredState = filteredState.filter(list => list.priority === 'low');\r\n    }\r\n    //changr filter\r\n    const changeFilter = (value: filterType) => {\r\n        setFilter(value);\r\n    }\r\n\r\n    //delete priority list\r\n    const deleteItem = (id: string) => {\r\n        setState(state.filter(list => list.id !== id));\r\n    }\r\n\r\n    return (\r\n        <div className={styles.preJuniorBlock}>\r\n            <h2>PreJunior</h2>\r\n            <div className={styles.preJunior}>\r\n                <div className={styles.less1}>\r\n                    <DisplayTelegram fullName={'Александр Горячко'}\r\n                                     text={'Lorem ipsum dolor sit amet, consecteturuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu adipisicing elit. '}\r\n                                     addedTime={'16:47'}/>\r\n                </div>\r\n                <div className={styles.less2}>\r\n                    <PriorityList state={filteredState} deleteItem={deleteItem} changeFilter={changeFilter}/>\r\n                </div>\r\n                <div className={styles.less3}>\r\n                    <Lesson3/>\r\n                </div>\r\n                <div className={styles.less4}>\r\n                    <AllCustomComponent/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport styles from './EditableSpan.module.css';\r\nimport {MyInput} from '../input/MyInput'\r\n\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string;\r\n    onChange: (newValue: string) => void;\r\n}\r\nexport const EditableSpan = (props: EditableSpanPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {value, onChange} = props;\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const onKeyPressHandler = (charcode: number) => {\r\n        console.log(charcode);\r\n        if (charcode === 13) {\r\n            if (value) {\r\n                setEditMode(false);\r\n            } else {\r\n                alert('Empty string');\r\n            }\r\n\r\n        }\r\n    }\r\n    return (\r\n        editMode\r\n            ? <MyInput value={value} onChange={onChange} onKeyPress={onKeyPressHandler}/>\r\n            : <span onClick={activateEditMode}>{value}</span>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Select.module.css';\r\n\r\n\r\ntype SelectPropsType = {\r\n    items: Array<string>;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n}\r\nexport const Select = (props: SelectPropsType) => {\r\n    const {items, onChange, value} = props;\r\n    return (\r\n        <div className={styles.select}>\r\n            <select onInput={(e) => onChange(e.currentTarget.value)}>\r\n                {items.map((item, i) => <option key={i} value={item}\r\n                                                selected={value === item ? true : false}>{item}</option>)}\r\n            </select>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport styles from './Radio.module.css';\r\n\r\nexport type RadioItemType = {\r\n    id: string;\r\n    value: string;\r\n    label: string\r\n}\r\ntype RadioPropsType = {\r\n    name: string;\r\n    items: Array<RadioItemType>;\r\n    value: string;\r\n    onChange: (value: string) => void;\r\n}\r\n\r\nexport const Radio = (props: RadioPropsType) => {\r\n    const {items, name, value,onChange} = props;\r\n    return (\r\n        <div>\r\n            {\r\n                items.map(item => <div key={item.id} className={styles.form_radio}>\r\n                    <input id={item.id}\r\n                           checked={value === item.value}\r\n                           type=\"radio\"\r\n                           name={name}\r\n                           value={item.value}\r\n                           onChange={(e) => onChange(e.currentTarget.value)}/>\r\n                    <label htmlFor={item.id}>{item.label}</label>\r\n                </div>)\r\n            }\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport styles from './Junior.module.css'\r\nimport {EditableSpan} from '../../common/editableSpan/EditableSpan';\r\nimport {saveState, restoreState} from '../../settings/localStorage/localStorage';\r\nimport {MyButton} from '../../common/button/MyButton';\r\nimport {Select} from '../../common/select/Select';\r\nimport {Radio, RadioItemType} from '../../common/radio/Radio';\r\n\r\nexport const Junior = () => {\r\n\r\n    //less6 - editableSpan\r\n    const [valueES, setValueES] = useState<string>('Lesson 6 editableSpam');\r\n\r\n    const onChangeValueES = (newValue: string) => {\r\n        setValueES(newValue);\r\n    }\r\n    //less6 - localStorage\r\n    const [valueLS, setValueLS] = useState<string>('Lesson 6 localStorage');\r\n\r\n    type StateType = { valueLS: string }\r\n    const addToLocalStorage = () => {\r\n        saveState<StateType>('test', {valueLS});\r\n    }\r\n    const restoreFromLocalStorage = () => {\r\n        const state: StateType = restoreState<StateType>(\"test\", {valueLS: 'Lesson 6 example'});\r\n        setValueLS(state.valueLS);\r\n    }\r\n\r\n\r\n    //less 7\r\n    //select\r\n    const [selectValue, setSelectValue] = useState<string>(\"Jora\");\r\n    const items = [\r\n        \"Alex\",\r\n        \"Gor\",\r\n        \"Jora\",\r\n        \"Anyfriy\",\r\n    ]\r\n    const onChangeSelect = (value: string) => {\r\n        setSelectValue(value);\r\n    }\r\n    //radio\r\n    const [CheckedValue, setCheckedValue] = useState<string>(\"2\");\r\n    const radioItems: RadioItemType[] = [\r\n        {\r\n            value: '1',\r\n            label: 'Radio button 1',\r\n            id: 'radio-1'\r\n        },\r\n        {\r\n            value: '2',\r\n            label: 'Radio button 2',\r\n            id: 'radio-2'\r\n        },\r\n        {\r\n            value: '3',\r\n            label: 'Radio button 3',\r\n            id: 'radio-3'\r\n        },\r\n    ];\r\n    const onChangeChecked = (value: string) => {\r\n        setCheckedValue(value);\r\n    }\r\n    return (\r\n        <div className={styles.JuniorBlock}>\r\n            <h2>Junior</h2>\r\n            <div className={styles.Junior}>\r\n                <div className={styles.less6}>\r\n                    <h2>Lesson 6</h2>\r\n                    <div className={styles.less6_1}>\r\n                        <h3>Lesson6_1 - EditableSpan</h3>\r\n                        <EditableSpan value={valueES} onChange={onChangeValueES}/>\r\n                    </div>\r\n                    <div className={styles.less6_2}>\r\n                        <h3>Lesson6_2 - localStorage</h3>\r\n                        <EditableSpan value={valueLS} onChange={setValueLS}/>\r\n                        <MyButton title={'save'} type={'default'} onClickHandler={addToLocalStorage}/>\r\n                        <MyButton title={'restore'} type={'default'} onClickHandler={restoreFromLocalStorage}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.less7}>\r\n                    <h2>Lesson 7 - Select</h2>\r\n                    <Select onChange={onChangeSelect} items={items} value={selectValue}/>\r\n                    <h2>Lesson 7 - Radio</h2>\r\n                    <Radio name={'car'} items={radioItems} value={CheckedValue} onChange={onChangeChecked}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","\r\nexport function saveState<T> (key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const JuniorHard = () => {\r\n    return (\r\n        <div>Junior+</div>\r\n    );\r\n}","import React from 'react'\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <>\r\n            <input type=\"checkbox\" id=\"navToggle\" hidden />\r\n                <nav className={styles.nav}>\r\n                    <label htmlFor=\"navToggle\" className={styles.navToggle}></label>\r\n                    <h2 className={styles.logo}>\r\n                        {/*<a href=\"https://grok88.github.io/Ignat\">homepage</a>*/}\r\n                        <NavLink to='/' activeClassName={styles.active}>Homepage</NavLink>\r\n                    </h2>\r\n                    <ul>\r\n                        <li><NavLink to='/prejunior' activeClassName={styles.active}>Prejunior</NavLink></li>\r\n                        <li><NavLink to='/junior' activeClassName={styles.active}>Junior</NavLink></li>\r\n                        <li><NavLink to='/junior+' activeClassName={styles.active}>Junior+</NavLink></li>\r\n                    </ul>\r\n                </nav>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\nimport styles from './App.module.css';\nimport {HashRouter, Route} from 'react-router-dom';\nimport {PreJunior} from './components/preJunior/PreJunior';\nimport {Junior} from './components/Junior/Junior';\nimport {JuniorHard} from './components/Junior+/Junior+';\nimport {Navbar} from './components/navbar/Navbar';\n\n//TS\nexport type priorityListType = {\n    id: string,\n    title: string,\n    priority: string\n}\nexport type stateType = Array<priorityListType>;\nexport type filterType = 'all' | 'hight' | 'middle' | 'low';\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Navbar/>\n            <main role=\"main\">\n                <div className={styles.app}>\n                    {/*<Route exact path={'/'} render={() => <Main/>}/>*/}\n                    <Route path={'/prejunior'} render={() => <PreJunior/>}/>\n                    <Route path={'/junior'} render={() => <Junior/>}/>\n                    <Route path={'/junior+'} render={() => <JuniorHard/>}/>\n                </div>\n            </main>\n        </HashRouter>\n    );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}